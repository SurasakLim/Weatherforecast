apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply from: '../config/detekt.gradle'

android {
    compileSdkVersion android_app_v3_compile_sdk_version
    buildToolsVersion android_app_v3_build_tools_version

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.example.weatherforecast"
        minSdkVersion android_app_v3_min_sdk_version
        targetSdkVersion android_app_v3_target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    androidExtensions {
        experimental = true
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    //groovy
    configurations.all {
        resolutionStrategy.force "org.antlr:antlr4-runtime:4.5.3"
        resolutionStrategy.force "org.antlr:antlr4-tool:4.5.3"
    }

//kotlin DSL
    configurations.all {
        resolutionStrategy {
            force("org.antlr:antlr4-runtime:4.5.3")
            force("org.antlr:antlr4-tool:4.5.3")
        }
    }
}

dependencies {
    implementation(
            fileTree(dir: 'libs', include: ['*.jar']),
            project(':common-rx'),
            project(':weather-api')
    )
    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
    implementation(
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version",
            "androidx.appcompat:appcompat:$android_support_version",
            "androidx.core:core-ktx:$android_support_core_version",
            "androidx.cardview:cardview:$android_support_card_view_version",
            'androidx.constraintlayout:constraintlayout:2.0.4',

            "com.google.code.gson:gson:$gson_version",
            "com.google.dagger:dagger:$dagger_version",
            "com.google.dagger:dagger-android:$dagger_version",
            "com.google.dagger:dagger-android-support:$dagger_version",
            'com.google.android.material:material:1.1.0',
            "androidx.navigation:navigation-fragment-ktx:$navigation_version",
            "androidx.navigation:navigation-ui-ktx:$navigation_version",
            'com.thoughtbot:expandablerecyclerview:1.4',

            "com.squareup.retrofit2:retrofit:$retrofit_version",
            "com.squareup.retrofit2:converter-gson:$retrofit_version",
            "com.squareup.okhttp3:okhttp:$okhttp_version",
            "com.squareup.okhttp3:logging-interceptor:$okhttp_version",
            "com.squareup.okhttp3:okhttp-urlconnection:$okhttp_version",
            "androidx.lifecycle:lifecycle-extensions:$jetpack_lifecycle_version",
            "androidx.navigation:navigation-runtime-ktx:$navigation_version",
            "androidx.navigation:navigation-fragment-ktx:$navigation_version",
            "androidx.navigation:navigation-ui-ktx:$navigation_version",
            "androidx.room:room-runtime:$room_version",
            "androidx.room:room-rxjava2:$room_version",
    )

    kapt(
            "com.github.bumptech.glide:compiler:$glide_version",
            "com.google.dagger:dagger-compiler:$dagger_version",
            "com.google.dagger:dagger-android-processor:$dagger_version",
            "androidx.room:room-compiler:$room_version"
    )

    implementation("com.github.bumptech.glide:glide:$glide_version") {
        exclude group: "com.android.support"
        transitive = true
    }

    // Test helpers
    testImplementation(
            "junit:junit:$junit_version",
            "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version",
            "org.mockito:mockito-inline:$mockito_version",
            "androidx.test:core:$androidx_test_core_version",
            "androidx.arch.core:core-testing:$jetpack_core_testing_version",
            "androidx.room:room-testing:$room_version",
            "androidx.test.ext:junit-ktx:$androidx_junit_version",
            "org.robolectric:robolectric:$robolectric_version"
    )

    androidTestImplementation(
            "androidx.test.ext:junit:$androidx_junit_version",
            "androidx.test.espresso:espresso-core:$androidx_espresso_version",
            "androidx.test.espresso:espresso-intents:$androidx_espresso_version",
            "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version",
            "org.mockito:mockito-android:$mockito_android_version",
    )

}

apply plugin: 'com.google.gms.google-services'
